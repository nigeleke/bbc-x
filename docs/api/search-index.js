var searchIndex = new Map(JSON.parse('[\
["bbc_x",{"doc":"","t":"CCCCCHCHCCFNNNNNNNNONNNNNNNOOOOONNNNNFNNNHNNNHHHNNNNFIPPIPPPIIOONNONNNNONNNPPPPIGFPIPPPPPIIGPPPPPPPPPIPIGPPPPIPIPIPIPPPPPPPPPPPPPPPPIPPGPPPPGPIPPGPPPPPGPIPPPIPPPPPPPPPPPPPIPPPPGIFGPPPPIIPPPPPPPPPPPPPPPPPPPPPPPONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOHHHFHHHHHHHNNNHHHHHHNHHHHHHNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNNHNHHIFFNNNNNNNNNNONNONNNNNNPPPGPPPIPNNNNNNNNN","n":["args","assembler","assembly","ast","bbc_x","bbc_x","grammar","main","parser","result","Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","eq","files","files","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","into","list","list_path","run","trace","trace_path","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","Assembler","assemble","borrow","borrow_mut","confirm_all_references_defined","eq","fmt","from","generate_code","get_definitions","get_references","into","try_from","try_into","type_id","Assembly","Code","FWord","IWord","MemoryAddress","Octal","PWord","SWord","SymbolTable","WordContent","base","base","borrow","borrow_mut","code","default","from","into","new","symbol_table","try_from","try_into","type_id","ADD","AND","ARCTAN","AbsoluteAddress","Acc","Address","AddressOperand","AddressOperand","AddressRef","CAPTN","CHYP","CLR","COS","CYCR","Character","Comment","ConstOperand","ConstOperand","DECR","DVD","DirectAddress","EXEC","EXP","F","FLOAT","FRAC","FWord","FWord","FloatType","GeneralOperand","I","INCR","INT","IPUT","IWord","IWord","Identifier","Identifier","Index","IndirectAddress","IntType","JEZ","JGZ","JLIK","JLZ","JNZ","JOI","JUMP","LDN","LDR","LIBR","LINE","LN","LibraryMnemonic","LoadN","LoadR","LoadRConst","Location","MOD","MPLY","Mnemonic","NEG","NEQV","NOT","NTHG","NumericAddress","NumericAddress","NumericCharacter","OPUT","OR","Octal","Octal","Octal","P","PRINT","PUT","PWord","PWord","Punctuation","PutType","READ","RelativeAddress","RelativeRef","S","SHFR","SIN","SKAE","SKAG","SKAL","SKAN","SKET","SLIK","SNLZ","SQRT","STOP","SUBT","SWord","SWord","SWord","SignedFWord","SignedInteger","SimpleAddressOperand","SourceProgram","SourceProgramLine","SourceProgramWord","TAKE","TAN","TYPE","TakeType","TypeDesignator","WordValue","XADD","XAND","XCHYP","XCLR","XCYCR","XDECR","XDVD","XEXEC","XINCR","XIPUT","XMOD","XMPLY","XNEG","XNEQV","XNOT","XNTHG","XOPUT","XOR","XPUT","XSHFR","XSUBT","XTAKE","XTYPE","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","comment","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","identifier","identifier","identifier","identifier","identifier","index","into","into","into","into","into","into","into","into","into","into","into","len","location","location","new","new","source_program_word","source_program_word","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","assemble","bbc_x","parse","Grammar","absolute_address","acc","actual_character","address","address_operand","alpha_character","alpha_numeric","bbcx_line","borrow","borrow_mut","comment","const_operand","decimal_part","digit","exact","exponent_part","from","fword","general_operand","identifier","index","index_ref","inline_ws","into","iword","jump_mnemonic","ldn_mnemonic","ldr_mnemonic","library_mnemonic","library_mnemonic_pword","loadn_pword","loadr_const_pword","loadr_pword","location","n0_15_mnemonc","n0_15_xmnemonic","n16_22_mnemonic","n16_22_xmnemonic","numeric_address","numeric_character","oct_dig","octal","octal_word","punctuation","put_type_mnemonic","put_type_pword","pword","relative_address","sign","signed_fword","signed_integer","simple_address_operand","skip_mnemonic","source_program_line","source_program_word","subscript10","sword","take_type_mnemonic","take_type_pword","try_from","try_into","type_designator","type_id","unsigned_fword","unsigned_integer","LineNumber","ParsedLine","Parser","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","from","from","into","into","line_number","new","parse","parse_result","try_from","try_from","try_into","try_into","type_id","type_id","CannotReadFile","DuplicatedSymbols","Err","Error","InvalidInput","InvalidLine","Ok","Result","UndefinedSymbols","borrow","borrow_mut","eq","fmt","from","into","try_from","try_into","type_id"],"q":[[0,"bbc_x"],[10,"bbc_x::args"],[37,"bbc_x::assembler"],[52,"bbc_x::assembly"],[75,"bbc_x::ast"],[361,"bbc_x::bbc_x"],[364,"bbc_x::grammar"],[430,"bbc_x::parser"],[453,"bbc_x::result"],[471,"alloc::string"],[472,"alloc::vec"],[473,"core::result"],[474,"clap_builder::builder::command"],[475,"std::path"],[476,"core::iter::traits::iterator"],[477,"core::fmt"],[478,"core::fmt"],[479,"clap_builder"],[480,"clap_builder::util::id"],[481,"core::option"],[482,"core::any"],[483,"std::collections::hash::map"],[484,"pom::parser"]],"d":["","","","","","","","","","","Resurrection of the educational BBC-X assembler language …","","","","","","","","","The source file(s) to be compiled and / or run.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Create listing files during compilation. The list files …","The folder where the list files will be written. If not …","Run the file(s) following successfully compillation. If …","Trace a file when it is executed. The trace files will be …","The folder where the trace output files will be written. …","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Contains the error value","","","","Contains the success value","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,23,23,23,0,23,23,23,0,0,0,23,23,23,23,0,0,41,41,0,41,41,41,0,0,42,43,20,20,20,20,20,20,20,20,20,20,20,33,33,33,32,0,0,0,27,0,33,33,33,33,33,0,0,0,27,33,33,30,33,33,26,33,33,0,24,0,0,26,33,33,33,0,24,0,31,0,30,0,33,33,33,33,33,33,33,33,33,33,33,33,25,25,25,25,0,33,33,0,33,33,33,33,0,31,0,33,33,0,24,29,26,33,33,0,24,0,25,33,32,0,26,33,33,33,33,33,33,33,33,33,33,33,33,0,24,29,29,29,0,0,0,0,33,33,33,25,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,28,19,24,25,26,27,28,29,30,31,32,33,19,24,25,26,27,28,29,30,31,32,33,44,24,25,26,27,28,29,30,31,32,33,24,25,26,27,28,29,30,31,32,33,19,19,19,24,25,26,27,28,29,30,31,32,33,19,24,25,26,26,27,28,29,30,31,32,33,19,24,25,26,27,28,29,30,31,32,33,25,27,28,30,31,28,19,24,25,26,27,28,29,30,31,32,33,44,19,19,19,28,19,19,24,25,26,27,28,29,30,31,32,33,26,19,24,25,26,27,28,29,30,31,32,33,19,24,25,26,27,28,29,30,31,32,33,19,24,25,26,27,28,29,30,31,32,33,45,46,47,48,0,0,0,0,0,0,0,0,0,0,0,49,49,49,0,0,0,0,0,0,49,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,49,0,0,0,0,0,50,40,50,40,40,40,50,40,50,40,40,40,50,40,50,40,50,40,50,40,4,4,51,0,4,4,51,0,4,4,4,4,4,4,4,4,4,4],"f":[0,0,0,0,0,[[[2,[1]]],[[5,[3,4]]]],0,[[],3],0,0,0,[6,6],[6,6],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[[7,7],8],[7,[[0,[[11,[],[[9,[10]]]]]]]],0,[[7,12],13],[[[2,[1]]],7],[-1,-1,[]],[14,[[5,[7,15]]]],[14,[[5,[7,15]]]],[[],[[17,[16]]]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[[7,14],[[5,[3,15]]]],[[7,14],[[5,[3,15]]]],0,[[[2,[19]]],[[5,[20,4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[1]],[22,[1,21]]],[[5,[3,4]]]],[[23,23],8],[[23,12],13],[-1,-1,[]],[[[2,[19]]],[[22,[21,24]]]],[[[2,[19]]],[[5,[[22,[1,21]],4]]]],[[[2,[19]]],[[2,[1]]]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],20],[-1,-1,[]],[-1,-2,[],[]],[[[22,[1,21]],[22,[21,24]]],20],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[[],19],[[19,19],8],[[24,24],8],[[25,25],8],[[26,26],8],[[27,27],8],[[28,28],8],[[29,29],8],[[30,30],8],[[31,31],8],[[32,32],8],[[33,33],8],[[19,12],13],[[24,12],13],[[25,12],13],[[26,12],13],[[26,12],13],[[27,12],13],[[28,12],13],[[29,12],13],[[30,12],13],[[31,12],13],[[32,12],13],[[33,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[25,[[17,[1]]]],[27,[[17,[1]]]],[28,[[17,[1]]]],[30,[[17,[1]]]],[31,[[17,[1]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[19,[[17,[1]]]],0,[[[17,[1]],[17,[24]],[17,[1]]],19],[[30,[17,[21]]],28],[19,[[17,[24]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,0,[[[2,[19]]],[[5,[20,4]]]],[7,[[5,[3,4]]]],[10,[[5,[[2,[19]],4]]]],0,[[],[[35,[34,21]]]],[[],[[35,[34,34]]]],[[],[[35,[34,34]]]],[[],[[35,[34,31]]]],[[],[[35,[34,28]]]],[[],[[35,[34,34]]]],[[],[[35,[34,34]]]],[[],[[35,[34,19]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[35,[34,1]]]],[[],[[35,[34,29]]]],[[],[[35,[34,1]]]],[[],[[35,[34,34]]]],[36,[[35,[34,1]]]],[[],[[35,[34,1]]]],[-1,-1,[]],[[],[[35,[34,37]]]],[[],[[35,[34,27]]]],[[],[[35,[34,1]]]],[[],[[35,[34,21]]]],[[],[[35,[34,21]]]],[[],[[35,[34,1]]]],[-1,-2,[],[]],[[],[[35,[34,38]]]],[[],[[35,[34,33]]]],[[],[[35,[34,33]]]],[[],[[35,[34,33]]]],[[],[[35,[34,33]]]],[[],[[35,[34,25]]]],[[],[[35,[34,25]]]],[[],[[35,[34,25]]]],[[],[[35,[34,25]]]],[[],[[35,[34,1]]]],[[],[[35,[34,33]]]],[[],[[35,[34,33]]]],[[],[[35,[34,33]]]],[[],[[35,[34,33]]]],[[],[[35,[34,32]]]],[[],[[35,[34,34]]]],[[],[[35,[34,34]]]],[[],[[35,[34,26]]]],[[],[[35,[34,39]]]],[[],[[35,[34,34]]]],[[],[[35,[34,33]]]],[[],[[35,[34,25]]]],[[],[[35,[34,25]]]],[[],[[35,[34,21]]]],[[],[[35,[34,1]]]],[[],[[35,[34,37]]]],[[],[[35,[34,38]]]],[[],[[35,[34,30]]]],[[],[[35,[34,33]]]],[[],[[35,[34,19]]]],[[],[[35,[34,24]]]],[[],[[35,[34,34]]]],[[],[[35,[34,1]]]],[[],[[35,[34,33]]]],[[],[[35,[34,25]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[],[[35,[34,34]]]],[-1,18,[]],[[],[[35,[34,37]]]],[[],[[35,[34,38]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[40,40],8],[[40,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[21,[5,[19,4]]],40],[36,[[5,[[2,[19]],4]]]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[4,4],8],[[4,12],13],[-1,-1,[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]]],"c":[],"p":[[5,"String",471],[5,"Vec",472],[1,"tuple"],[6,"Error",453],[6,"Result",473],[5,"Command",474],[5,"Args",10],[1,"bool"],[17,"Item"],[5,"PathBuf",475],[10,"Iterator",476],[5,"Formatter",477],[8,"Result",477],[5,"ArgMatches",478],[8,"Error",479],[5,"Id",480],[6,"Option",481],[5,"TypeId",482],[5,"SourceProgramLine",75],[5,"Assembly",52],[1,"usize"],[5,"HashMap",483],[5,"Assembler",37],[6,"SourceProgramWord",75],[6,"PWord",75],[6,"Octal",75],[6,"GeneralOperand",75],[5,"AddressOperand",75],[6,"ConstOperand",75],[6,"SimpleAddressOperand",75],[6,"Address",75],[6,"NumericAddress",75],[6,"Mnemonic",75],[1,"u8"],[5,"Parser",484],[1,"str"],[1,"f32"],[1,"i32"],[1,"u32"],[5,"ParsedLine",430],[8,"WordContent",52],[8,"SymbolTable",52],[8,"Code",52],[8,"SourceProgram",75],[8,"Location",75],[8,"Identifier",75],[8,"SWord",75],[8,"Comment",75],[5,"Grammar",364],[5,"Parser",430],[8,"Result",453]],"b":[[269,"impl-Debug-for-Octal"],[270,"impl-Display-for-Octal"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
